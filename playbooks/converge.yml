---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: converge | all
  hosts: all
  remote_user: root
  become: true
  tasks:
    - name: include default variables
      ansible.builtin.include_vars: "./vars/main.yml"

    - name: include release specific variables
      ansible.builtin.include_vars: "{{ _loop_var }}"
      loop: "{{ query('first_found', _params) }}"
      loop_control:
        loop_var: _loop_var
      vars:
        _params:
          files:
            - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
            - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
            - "{{ ansible_distribution | lower }}.yml"
            - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
            - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
            - "{{ ansible_os_family | lower }}.yml"
          paths:
            - "./vars"
          skip: true

    - name: include release specific tasks
      ansible.builtin.include_tasks: "{{ _loop_var }}"
      loop: "{{ query('first_found', _params) }}"
      loop_control:
        loop_var: _loop_var
      vars:
        _params:
          files:
            - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
            - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
            - "{{ ansible_distribution | lower }}.yml"
            - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
            - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
            - "{{ ansible_os_family | lower }}.yml"
          paths:
            - "./tasks"
          skip: true

    - name: include default tasks
      ansible.builtin.include_tasks: "./tasks/main.yml"

    - name: include role
      ansible.builtin.include_role:
        name: python

    - name: include role
      ansible.builtin.include_role:
        name: ansible

    - name: include role
      ansible.builtin.include_role:
        name: locales

    - name: include role
      ansible.builtin.include_role:
        name: timezone

    - name: include role
      ansible.builtin.include_role:
        name: catatonit

    - name: include role
      ansible.builtin.include_role:
        name: gosu

    - name: include role
      ansible.builtin.include_role:
        name: postgres

    - name: purge /var/lib/postgresql/data
      ansible.builtin.shell:
        cmd: |
          set -euxo pipefail
          mkdir -p /var/lib/postgresql/data
          find /var/lib/postgresql/data -mindepth 1 -delete
      args:
        executable: "/bin/bash"
      register: result
      changed_when: result is not succeeded
      failed_when: false

    - name: re-create /var/run/postgresql
      ansible.builtin.shell:
        cmd: |
          set -euxo pipefail
          rm -rf /var/run/postgresql
          mkdir -p /var/run/postgresql
          chown -Rf postgres:postgres /var/run/postgresql
          chmod 2777 /var/run/postgresql
      args:
        executable: "/bin/bash"
      register: result
      changed_when: result is not succeeded
      failed_when: false

    - name: prepare directories
      ansible.builtin.file:
        dest: "{{ item.dest }}"
        owner: "{{ item.owner | default('root') }}"
        group: "{{ item.group | default('root') }}"
        mode: "{{ item.mode | default('0755') }}"
        state: "{{ item.state | default('directory') }}"
      loop:
        - { dest: "/docker-entrypoint-initdb.d" }
        - { dest: "/usr/share/postgresql/{{ postgres_release }}" }
        - { dest: "/var/lib/postgresql", owner: "postgres", group: "postgres" }
        - { dest: "/var/lib/postgresql/data", owner: "postgres", group: "postgres" }
        - { dest: "/var/run/postgresql", owner: "postgres", group: "postgres", mode: "2777" }

    - name: "prepare /usr/share/postgresql/postgresql.conf.sample"
      ansible.builtin.shell:
        cmd: |
          set -euxo pipefail
          mv /usr/share/postgresql/{{ postgres_release }}/postgresql.conf.sample /usr/share/postgresql/
          ln -s ../postgresql.conf.sample /usr/share/postgresql/{{ postgres_release }}/postgresql.conf.sample
      args:
        executable: "/bin/bash"
        creates: "/usr/share/postgresql/postgresql.conf.sample"
      register: result
      until: result is succeeded
      changed_when: result is not succeeded

    - name: copy templates
      ansible.builtin.template:
        dest: "{{ item.dest }}"
        src: "{{ item.src | default('./templates' + item.dest + '.j2') }}"
        owner: "{{ item.owner | default('root') }}"
        group: "{{ item.group | default('root') }}"
        mode: "{{ item.mode | default('0644') }}"
      loop:
        - { dest: "/usr/share/postgresql/postgresql.conf.sample" }

    - name: prepare files
      ansible.builtin.file:
        dest: "{{ item.dest }}"
        owner: "{{ item.owner | default('root') }}"
        group: "{{ item.group | default('root') }}"
        mode: "{{ item.mode | default('0644') }}"
        state: "{{ item.state | default('file') }}"
      loop:
        - { dest: "/usr/share/postgresql/postgresql.conf.sample" }
